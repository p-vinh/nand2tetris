

class TicTacToe {
    static Board board;
    static Pieces Cross, Circle;
    static AI ai;
    static int callCount;
    static boolean display;
    static int x1;

    function int processBoard() {
        do board.evaluateBoard();

        if (board.isWin()) {
            do board.drawWin();
            return 3;
        }

        if (board.isDraw()) {
            return 2;
        }

        return 1;
    }

    function void init() {
		do Input.init();
        let board = Board.new(200,60);
		let Cross = Piece.new(1);
		let Circle = Piece.new(2);
        let ai = AI.new(board, Cross, Circle);
		return;
	}

    function void start() {
        var int currentPlayer, currentPiece;
        var boolean gameOver;
        var int result;

        while (true) {
            let currentPlayer = InputUtil.waitForZeroOrOne("'1' TO LET SYSTEM MAKE THE FIRST MOVE || '0' TO MAKE THE FIRST STEP");
			let currentPiece = Cross;
            let gameOver = false;


            while (~gameOver) {
                let result = TicTacToe.play(currentPlayer,currentPiece);
				
				if(result = 0) {
					let gameOver = true;
				}

				if(result = 1) {
					let currentPlayer = TicTacToe.getOtherPlayer(currentPlayer);
					let currentPiece = TicTacToe.getOtherPiece(currentPiece);
				}

				if(result = 2) {
					do Input.showMessage("GAME TIE ^___^ || PRESS 'ENTER' TO PROCEED");
					let gameOver = true;
				}

				if(result = 3) {
					if(currentPlayer = 0) {
						do Input.showMessage("CONGRALUTIONS! YOU WON! || PRESS 'ENTER' TO PROCEED");
					} else {
						do Input.showMessage("YOU LOST || PRESS 'ENTER' TO PROCEED");
					}
					let gameOver = true;
				}
			}
			do board.dispose();
		}
	
		return;
	}

    function int play(int player, Piece p) {
		var boolean validPlayerInput;
		var int input;
		var Array playerMove, computerMove;
		let validPlayerInput = false;
		
		if(player=0) {
			while(~validPlayerInput) { 
				let input = Input.readInput("ENTER POSITION ( 1 - 9 ) || '0' to RESTART ");
				if(input=0) {
					return 0;
				}
				let playerMove = TicTacToe.inputToMove(input);
				let validPlayerInput = board.isFree(playerMove[0],playerMove[1]);
			}
			
			do board.makeMove(playerMove[0], playerMove[1], p);
			do board.drawMove(playerMove[0], playerMove[1], p);
			do playerMove.dispose();
			return TicTacToe.processBoard();
		} else {
			// let computerMove = TicTacToe.getComputerMove(p);
			// do board.makeMove(computerMove[0],computerMove[1],p);
			// do board.drawMove(computerMove[0],computerMove[1],p);
			// do computerMove.dispose();
			return TicTacToe.processBoard();
		}
	}

    function int getOtherPiece(Piece p) {
		if(p = Circle) {
			return Cross;
		} else {
			return Circle;
		}
	}
	
	function int getOtherPlayer(int p) {
		if(p = 0) {
			return 1;
		} else {
			return 0;
		}
	}

    function Array inputToMove(int input) {
		var Array moves;
		let moves = Array.new(2);
		let moves[0] = (input - 1) / 3 ; //row;
		let moves[1] = (input - 1)-(3 * moves[0]);
		return moves;
	}
}